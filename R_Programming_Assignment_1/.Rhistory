}
numeric(2)
columnmean <-function(y){
nc <- ncol(y)
means = numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,1])
}
means
}
mean(airquality[,1])
columnmean <-function(y){
nc <- ncol(y)
means = numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i], rm.na=TRUE)
}
means
}
columnmean(airquality)
columnmean <-function(y, removeNA=TRUE){
nc <- ncol(y)
means = numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i], rm.na=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
columnmean(airquality, removeNA = FALSE)
gc()
class(na)
class(na.fail())
?na
?na()
search()
base
base::abs(-10)
make.power <- function(x){}
make.power <- function(x){
pow <-function(n){
x^n
}
pow
}
make.power(3)
cube <- make.power(3)
cube(3)
Sys.Date()
Sys.time()
x<-Sys.time()
as.POSIXct(x)
as.POSIXlt(x)
names(as.POSIXlt(x))
x
p <-as.POSIXlt(x)
p
View(p)
View(p)
p[2]
p[1]
unclass(p)
names(unclass(p))
?unclass
x<-list(a=1:5,b=nrow(10))
x
x<-list(a=1:5,b=nnrow(10))
x<-list(a=1:5,b=rnorm(10))
x
lapply(x, meam)
lapply(x, mean)
lapply(x, mean)[1]
lapply(x, mean)[12
]
runif(1)
?runif
?elt
rep(1,4)
rnorm(10)
x<-c(rnorm(10), runif(10),rnorm(10,1))
>gl
?gl
gl(2, 8, labels = c("Control", "Treat"))
gl(3,10)
?split
split(x)
split(x, gl(5,6))
split(x, gl(3,10))
split(x, gl(3,10))
split(x, gl(3,10))
lapply(split(x, gl(3,10)),mean)
lapply(split(x, gl(3,10)),coiunt)
lapply(split(x, gl(3,10)),count)
lapply(split(x, gl(3,10)),length)
lapply(split(x, gl(3,10)),mean)
head(airquality)
nrow(airquality)
s <split(airquality, airquality$Month)
s <- split(airquality, airquality$Month)
s
lapply(s, mean)
s
lapply(s, mean(s[,1]))
lapply(s, mean(s[,1]), na.omit)
s[,1]
s
s[1][,1]
s[1]
s[1][1,1]
s[1][1]
s[1]
s
s[9]
s[8]
s[1]
s[1][1]
s[1][
}
s[1]
s[1][1,]
s[1][1,:]
s[1][,1]
colMeans(s[1], na.rm = TRUE)
colMeans(s, na.rm = TRUE)
colMeans(s, na.rm = TRUE, c("Ozone"))
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
debug(f(3))
debug()
debug(f)
f(3)
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
debug()
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
debug(x <- 5
y <- if(x < 3) {
debug(x <- 5
y <- if(x < 3) {
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f(1,2)
f(x=1,y=2)
f(x=1)
debug()
setwd("/Volumes/Documents/Learning/Learn R/R_Programming_Assignment_1")
df <- read.csv('specdata/001.csv')
View(df)
mean(df$sulfate, na.rm = TRUE)
df1 <- read.csv('specdata/002.csv')
df2 <- read.csv('specdata/002.csv')
df1 <- read.csv('specdata/001.csv')
View(df)
df = rbind(df1,df2)
df['sulfate']
id=1:2
length(id)
'x' +'y'
'x' & 'y'
'x' && 'y'
'x'+'y'
paste('x','y')
paste('x','y', sep = '/')
format(0, digits=0)
format(12.34, digits = 2, nsmall = 3)
format(12, digits = 0, nsmall = 3)
format(12, nsmall = 3)
format(12.34, digits = 2, nsmall = 3)
[1] "012"
sprintf("%03.0f", 12.34)
sprintf("%03.0f", 1)
sprintf("%03.0f", 12)
sprintf("%03f", 12)
sprintf("%03.0f", 12)
sprintf("%03.0f", 120)
sprintf("%03.0f", 120)
file_name
x<file_name
x<-'test'
paste(x, 'csv')
paste(x, 'csv', sep = '.')
id=1:1
length(id)
id=1:3
length(id)
id=1:1
id[1]
for (i in 1:1){
print(i)
}
browser()
pollutantmean <- function(directory, pollutant, id=1:1){
## `directory` is a character of length 1 indicating
## the location of the CSV file
## `pollutant` is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either `sulfate` or `nitrate`
## `id` is an integer vector indicating the monitor ID number
## to be used
## Return mean of the pollutant across all monitor list
## in the `id` vector (ignoring NA values)
## NOTE: Do not round the result!
for (i in id){
file_name = sprintf("%03.0f", i)
browser()
df = read.csv(paste(directory,
paste(file_name, 'csv', sep = "."), sep = '/'))
df_tem = df
if (i==2){
df = rbind(df_tem, df)
}
mean_val = mean(df[pollutant],na.rm=TRUE)
}
}
pollutantmean('specdata','sulfate', 1:2)
pollutant
df[pollutant]
mean(df[pollutant], na.rm = TRUE)
mean(df[pollutant], na.rm = TRUE)
df[pollutant]
mean(df[pollutant])
mean(df[pollutant], na.rm = TRUE)
mean(df$pollutant, na.rm = TRUE)
mean(df$sulfate, na.rm = TRUE)
mean(df['sulfate'], na.rm = TRUE)
mean(df['sulfate'], na.rm = TRUE)
mean(df[sulfate], na.rm = TRUE)
mean(df[['sulfate']], na.rm = TRUE)
pollutantmean('specdata', 'sulfate',1:1)
pollutantmean('specdata', 'sulfate',1:1)
pollutantmean <- function(directory, pollutant, id=1:1){
## `directory` is a character of length 1 indicating
## the location of the CSV file
## `pollutant` is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either `sulfate` or `nitrate`
## `id` is an integer vector indicating the monitor ID number
## to be used
## Return mean of the pollutant across all monitor list
## in the `id` vector (ignoring NA values)
## NOTE: Do not round the result!
for (i in id){
file_name = sprintf("%03.0f", i)
df = read.csv(paste(directory,
paste(file_name, 'csv', sep = "."), sep = '/'))
df_tem = df
if (i==2){
df = rbind(df_tem, df)
}
mean_val = mean(df[pollutant],na.rm=TRUE)
browser()
return(mean_val)
}
}
pollutantmean('specdata', 'sulfate',1:1)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
View(df)
View(df)
df[pollutant]
head(df[pollutant],300)
mean(df[pollutant])
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 70:72)
id
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
length(23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
id
id[1]
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 23)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
df
is.na(df)
is.na(dfany(sapply(df, anyNA))
)
any(sapply(df, anyNA))
any(colSums(is.na(df)) > 0)
colSums(is.na(df)) > 0
is.na(df)
View(df)
is.na(df$sulfate)
is.na(df$sulfate) * is.na(df$nitrate)
is.na(df$sulfate) && is.na(df$nitrate)
is.na(df$sulfate) & is.na(df$nitrate)
df[is.na(df$sulfate) & is.na(df$nitrate)]
is.na(df$sulfate) & is.na(df$nitrate)
df[[is.na(df$sulfate) & is.na(df$nitrate)]]
!is.na(df$sulfate) & is.na(df$nitrate)
!is.na(df$sulfate) & !is.na(df$nitrate)
library(dplyr)
filter(df, !is.na(df$sulfate) & !is.na(df$nitrate))
filter(df, !is.na(df$sulfate) & !is.na(df$nitrate))
nrow(filter(df, !is.na(df$sulfate) & !is.na(df$nitrate)))
source('pollutantmean.R')
complete("specdata", 3)
complete("specdata", 30:25)
complete("specdata", 30:25)
source('pollutantmean.R')
complete("specdata", 3)
complete("specdata", 30:25)
complete("specdata", 30:25)
source('pollutantmean.R')
complete("specdata", 3)
complete("specdata", 30:25)
source('pollutantmean.R')
source('pollutantmean.R')
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
cor(df$sulfate,df$nitrate)
?cor
cor(df$sulfate,df$nitrate, na.rm=TRUE)
cor(x=df$sulfate,y=df$nitrate, na.rm=TRUE)
cor(df$sulfate,df$nitrate, na.rm=TRUE)
df = na.omit(df)
cor(df$sulfate,df$nitrate)
is.na(df1)
rowSums(is.na(df1))
rowSums(is.na(df1)>0)
sum(rowSums(is.na(df1)>0))
df1
is.na(df1)
any(is.na(df1))
complete.cases(df1)
count(complete.cases(df1))
length(complete.cases(df1))
sum(complete.cases(df1))
summarise(df1)
summarize(df1)
summary(df1)
summary()
result <-vector(mode="numeric", length=0)
result
result <- c()
result
append(result,1
)
append(result,1)
result
result <- list()
append(result,1)
append(result,1)
append(result,1)
result
View(result)
result <-vector(mode="numeric", length=0)
append(result,1)
append(result,1)
append(result,1)
append(result,1)
result
source('pollutantmean.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
source('pollutantmean.R')
cr <- corr("specdata", 150)
source('pollutantmean.R')
cr <- corr("specdata", 150)
source('pollutantmean.R')
cr <- corr("specdata", 150)
head(cr)
source('pollutantmean.R')
cr <- corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
gc()
gc()
set.seed(10)
x <- rep(0:1, each = 5)
x
y <- 0.5 + 2 * x + e
e <- rnorm(10, 0, 20)
e
y <- 0.5 + 2 * x + e
plot(x,y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
fit <- lm(y ~ x1 + x2)
y
x
x1<-x
x2<-e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
fit
Rprof(NULL)
fit
fit$rank
set.seed(1)
rpois(5, 2)
