plot(x,y, pch=4)
example("points")
plot(x,y, pch=2)
x<-rnorm(100)
y<-rnorm(100)
x<-rnorm(100)
plot(x,y, pch=2)
plot(x,y, pch=20)
title("Scatterplot")
text((-2,-2), "Label")
text(-2,-2, "Label")
?legend()
legend("topleft",legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit)
abline(fit, lwd=3)
abline(fit, lwd=3, col="blue")
plot(x, y, xlab = "weight", ylab = "height", main = "Scatterplot", pch=20)
legend("topright",legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit, lwd=3, col="red")
z<- rpois(100,2)
par(mfrow = c(2,1))
plot(x,y, pch=20)
plot(x,z, pch=20)
par(mar=c(2,2,1,1))
plot(x,y, pch=20)
plot(x,y, pch=20)
par(mfrow=c(1,1))
x <- rnorm(100)
y <- x + rnorm(100)
x
y
?gl
gl(2,1)
gl(2, 8, labels = c("Control", "Treat"))
g<-gl(2,50, labels = c("Male", "Female"))
plot(x, y, type="n")
points(x[g=="Male"], y[g=="Male"], col="green")
points(x[g=="Female"], y[g=="Female"], col="blue")
points(x[g=="Female"], y[g=="Female"], col="blue", pch=19)
library(swirl)
swirl()
swirl()
install_course("Exploratory_Data_Analysis")
swirl()
qplot(data~dispal, why, data=mpg. geom=c("point","smoth"),facets=.~drv)
qplot(data~dispal, why, data=mpg. geom=c("point","smooth"),facets=.~drv)
qplot(data~dispal, hwy, data=mpg. geom=c("point","smooth"),facets=.~drv)
qplot(dispal, hwy, data=mpg. geom=c("point","smooth"),facets=.~drv)
qplot(displ, hwy, data=mpg. geom=c("point","smooth"),facets=.~drv)
qplot(displ, hwy, data=mpg. geom=c("point","smooth"),facets= .~drv)
qplot(displ, hwy, data=mpg, geom=c("point","smooth"),facets= .~drv)
g<-qplot(mpg,displ, hwy)
g<-qplot(mpg,aes(displ, hwy))
g <- ggplot(mpg,aes(displ, hwy))
g
summary(g)
g+geom_point()
g + geom_smooth()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = 'lm')
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swril Rules")
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swril Rules!")
g+geom_point()+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(col='pink',size=4,alpha=1/2)+geom_smooth(method = 'lm')+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(col='pink',size=4,alpha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2, aes(color=div))
g+geom_point(size=4,alpha=1/2, aes(color=dir))
g+geom_point(size=4,alpha=1/2, aes(color=drv))
g+geom_point(size=4,alpha=1/2, color=drv)
g+geom_point(size=4,alpha=1/2, color=aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y='Hwy Mileage')
g+geom_point(size=4,alpha=1/2, aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y='Hwy Mileage')
g+geom_point( aes(color=drv))+labs(title = "Swirl Rules!")+labs(x="Displacement", y='Hwy Mileage')
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=2, linetype=3, method="lm")
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=2, linetype=3, method="lm", se=FLSE)
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=2, linetype=3, method="lm", se=FLASE)
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=2, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv),size=2, alpha=1/2)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)+theme_bw(base_family = 'Times')
g+geom_point(aes(color=drv))+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)+theme_bw(base_family = "Times")
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type='l', ylim=c(-3,3))
plot(myx, myy, type='l'))
plot(myx, myy, type='l')
plot(myx, myy, type='l', ylim=c(-3,3))
g<-ggplot(testdat, aes(x=myx, y=myy))
g+geom_line()
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian(xlim=-3,ylim=3)
g+geom_line()+coord_cartesian(ylim=c(-3,3)
)
g<-ggplot(mpg, aes(x=myx, y=myy, color=factor(year)))
g<-ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g+geom_point()
g+geom_line()
g+geom_point()
g+geom_point()+facet_grid(drv~cy, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = 'lm',se=FALSE, size=2, color='black')
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = 'lm',se=FALSE, size=2, color='black') +labs(x='Displacement',y='Highway Mileage', titl='Swirl Rules!')
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = 'lm',se=FALSE, size=2, color='black') +labs(x='Displacement',y='Highway Mileage', title ='Swirl Rules!')
swirl()
str(dimonds)
str(diamonds)
hist(diamonds)
qplot(price, diamonds)
qplot(price, diamonds)
qplot(x=price, data=diamonds)
range(diamonds$price)
qplot(x=price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(x=price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(x=price, data=diamonds, geom='density')
qplot(x=price, data=diamonds, geom='density', color=cut)
qplot(x=carat, y=price, data=diamonds)
qplot(x=carat, y=price, data=diamonds, shape=cut)
qplot(x=carat, y=price, data=diamonds, color=cut)
qplot(x=carat, y=price, data=diamonds, color=cut, geom_smooth(method='lm'))
qplot(x=carat, y=price, data=diamonds, color=cut, geom_smooth(method="'lm'"lm))
qplot(x=carat, y=price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(x=carat, y=price, data=diamonds, color=cut, method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")+facet_grid(tilde~symbol)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")+facet_grid(.~cut)
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) +
| geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g<-ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,lengh=4),na.rm = TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,lengh=4),na.rm=TRUE)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE) at the
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2<-cut(diamonds$carat, cutpoints)
g<-ggplot(diamonds, aes(depth, price))
g+geom_point(alpha=1/3)+facet_grid(cut~cur2)
g+geom_point(alpha=1/3)+facet_grid(cut ~ cur2)
g+geom_point(alpha=1/3)+facet_grid(cut ~ car2)
diamond[myd,]
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~cur2)+geom_smooth(method='lm',size=3, color='pink')
g+geom_point(alpha=1/3)+geom_smooth(method='lm',size=3, color='pink')+facet_grid(cut~cur2)
g+geom_point(alpha=1/3)+geom_smooth(method='lm',size=3, color='pink')+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method='lm',size=3, color='pink')
ggplot(diamonds,aes(caray, price)) + geom_boxplot()
ggplot(diamonds,aes(carat, price)) + geom_boxplot()
ggplot(diamonds,aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
gc()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality)
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
library(ggplot2movies)
install.packages('ggplot2movies')
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
g
print(g)
g+geom_point()
plot(votes, rating, data = movies)plot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies) + stats_smooth("loess")qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, smooth = "loess") + geom_point()
qplot(votes, rating, data = movie)+ stats_smooth("loess") + geom_point()
qplot(votes, rating, data = movies)+ stats_smooth("loess") + geom_point()
qplot(votes, rating, data = movies)+geom_smooth() + geom_point()
swirl()
swirl()
library(swirl)
library(swirl)
swirl()
cx
cy
cmat
points(cx,cy, col=c('red','orange','purple',pch=3,cex=2,lwd=2))
points(cx,cy, col=c('red','orange','purple'),pch=3,cex=2,lwd=2))
points(cx,cy, col=c('red','orange','purple'),pch=3,cex=2,lwd=2)
mdist
mdist(x,y,cx,cy)
apply(distTmp, 2, which.min)
newClust
points(x,y)
points(x,y, pch=19)
points(x,y, pch=19)
points(x,y, pch=19, cex=2, col=col1[newClust])
points(x,y, pch=19, cex=2, col=cools1[newClust])
points(x,y, pch=19, cex=2, col=cols1[newClust])
points(x,y)
plot.new()
points(x,y)
points(x,y, pch=19, cex=2, col=cols1[newClust])
swirl()
cmat
points(cx,cy, col=c('red','orange','purple'),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(x, mean
)
?tappl
?tapply()
groups<-as.factor(rbinom(32,n=5,prob = 0.4))
groups
tapply(groups,groups,mean())
tapply(groups,groups,mean
)
tapply(groups,groups,length)
x
newClust
tapply(x, newClust,mean)
tapply(y, newClust,mean)
cols``
cols1
points(newCx, newCy, col=cols1,pch=8, cex=2, lwd=2)
mdis(x,y,newCx, newCy)
mdist(x,y, newCx, newCy)
apply(distTmp2,2, which.min)
points(x,y, pch=19, cex=2, col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex-2, lwd-2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame,3)
kmObj
kmObj$iter
kmObj$cluster
plot(x,y, col=kmObj$cluster, pch=19, cex=2)
kmObj$centers
plot(kmObj$centers,colo=c('black','red','green'), pch=3, cex=2, lwd=3)
plot(kmObj$centers,col=c('black','red','green'), pch=3, cex=2, lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit('addPatt.R')
rep(1)
rep(c(0,3))
rep(c(0,3), each=5)
source('addPatt.R', local = TRUE)
heatmap(dataMatrix)
mat
svd(mdt)
svd(mat)
matu%*%diag
diag %*% t(matv)
matu %*% diag %*% t(matv)
mat
scale(mat)
svd(scale(mat))
scale(mat)
prcomp(scale(mat))
svd
1
svd1
svd1$v
svd1$v[,1]
svd1$d
head(constantMatrix)
sdv2
sdv2svd2
svd2
svd2$d
svd2
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$
u
a1 <- (svd1$u[,1] * svd1[1]) %*% t(svd1$u[,1] * svd1[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2] * svd1$d[1:2] %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd)[:2]
names(ssd)[,:2]
names(ssd)
names(ssd)[-2]
names(ssd)[562:563]
names(ssd[562:563])
table(ssd$subject)
table(ssd$subject)
names(ssd[562:563])[1]
table(ssd$subject)
table(ssd$subject)[1]
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- ssd[ssd$subject == 1]
ssd[ssd$subject == 1]
len(table(ssd$subject))
length(table(ssd$subject))
dim(table(ssd$subject))
ssd$subject == 1]
ssd$subject == 1
sum(ssd$subject == 1)
sub1 <1 subset(ssd, subject ==1 )
sub1 <- subset(ssd, subject ==1 )
dim(sub1)
names(sub1[1:12])
myedit('showXY.R')
showMe()
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering<- hclust(mdist)
plot(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
mdist
hcluster(mdist)
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- apply(svd1$v, which.min)
maxCon <- apply(svd1$v[,2], which.min)
maxCon <- apply(svd1$v[,2], which.min)
maxCon <- apply(svd1$v[,2], which.min())
maxCon <- apply(svd1$v,2, which.min)
maxCon <- apply(svd1$v,2, which.max)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12, maxCon] )
mdist <- dist(sub1[,c(10:12, maxCon)] )
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[1:561],centers = 6)
kClust <- kmeans(sub1[,1:561],centers = 6)
kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <-kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity, nstart=100)
kClust <-kmeans(sub1[, -c(562, 563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying, 1:12], pch=19, ylab='Laying Cluster')
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown, 1:12], pch=19. ylab="Walkdown Cluster")
plot(kClust$centers[walkdown, 1:12], pch=19, ylab="Walkdown Cluster")
setwd("/Volumes/Documents/Learning/Coursera_R_Assignments/Coursera_R_Assignments/Exploratory_Data_Analysis_Project_2")
# Question6: Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County, California
# (fips == "06037"). Which city has seen greater changes over time in motor
# vehicle emissions?
library(ggplot2)
#-------------------------Working on Baltimore City-----------------------------
# First, Filter NEI by fips == "24510"
NEI_Baltimore <- NEI[NEI$fips == "24510", ]
# PART ONE: download data from 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip' to ./data folder and unzip it into the same folder
# check if the download folder exists, if not, create it
if (!file.exists("./data")) {
dir.create("./data")
print("Creating ./data folder")
}
# then check if the zip file exists, if not, download it
if (!file.exists("./data/NEI_data.zip")) {
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip",
destfile = "./data/NEI_data.zip")
print("Downloaded NEI_data.zip")
unzip("./data/NEI_data.zip", exdir = "./data")
print("Unzipped NEI_data.zip")
}
# STEP TWO: Read unziped data into R
NEI <- readRDS("./data/summarySCC_PM25.rds")
SCC <- readRDS("./data/Source_Classification_Code.rds")
# Question6: Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County, California
# (fips == "06037"). Which city has seen greater changes over time in motor
# vehicle emissions?
library(ggplot2)
#-------------------------Working on Baltimore City-----------------------------
# First, Filter NEI by fips == "24510"
NEI_Baltimore <- NEI[NEI$fips == "24510", ]
# Then, map NEI_Baltimore data set to SCC data set
NEI_Baltimore <- merge(NEI_Baltimore, SCC, by = "SCC", all.x = TRUE)
# Then, filter NEI_Baltimore data set EI.Sector contains vehicles
NEI_Baltimore_Vehicle <- NEI_Baltimore[grep("vehicles", NEI_Baltimore$EI.Sector,
ignore.case = TRUE
), ]
# Then, group NEI_Baltimore data set by year and sum Emissions column
NEI_Baltimore_Vehicle <- aggregate(Emissions ~ year, NEI_Baltimore_Vehicle, sum)
#-----------------Working on Los Angeles County, California---------------------
# First, Filter NEI by fips == "06037"
NEI_LA <- NEI[NEI$fips == "06037", ]
# Then, map NEI_LA data set to SCC data set
NEI_LA <- merge(NEI_LA, SCC, by = "SCC", all.x = TRUE)
# Then, filter NEI_LA data set EI.Sector contains vehicles
NEI_LA_Vehicle <- NEI_LA[grep("vehicles", NEI_LA$EI.Sector,
ignore.case = TRUE
), ]
# Then, group NEI_LA data set by year and sum Emissions column
NEI_LA_Vehicle <- aggregate(Emissions ~ year, NEI_LA_Vehicle, sum)
# change the ggplot theme
theme_set(theme_light())
# Plot both NEI_LA_Vehicle and NEI_Baltimore_Vehicle by year in different line colors
g <- ggplot() +
geom_line(data = NEI_LA_Vehicle, aes(x = year, y = Emissions, color = "red")) +
geom_line(data = NEI_Baltimore_Vehicle, aes(
x = year, y = Emissions,
color = "blue"
)) +
labs(
title = "Total PM2.5 Emissions from Motor Vehicle Sources by
Year in Baltimore City and Los Angeles County, California",
x = "Year",
y = "Total PM2.5 Emissions"
) +
scale_color_manual(
name = "City",
values = c("red" = "red", "blue" = "blue"),
labels = c("Baltimore City", "Los Angeles County, California")
)
# Last, save the plot to "plot6.png" file in figure folder.
ggsave("./figure/Plot6.png", plot = g, width = 8, height = 5, units = "in")
print("Png File has been created in the figure folder.")
# Question6: Compare emissions from motor vehicle sources in Baltimore City
# with emissions from motor vehicle sources in Los Angeles County, California
# (fips == "06037"). Which city has seen greater changes over time in motor
# vehicle emissions?
library(ggplot2)
#-------------------------Working on Baltimore City-----------------------------
# First, Filter NEI by fips == "24510"
NEI_Baltimore <- NEI[NEI$fips == "24510", ]
# Then, map NEI_Baltimore data set to SCC data set
NEI_Baltimore <- merge(NEI_Baltimore, SCC, by = "SCC", all.x = TRUE)
# Then, filter NEI_Baltimore data set EI.Sector contains vehicles
NEI_Baltimore_Vehicle <- NEI_Baltimore[grep("vehicles", NEI_Baltimore$EI.Sector,
ignore.case = TRUE
), ]
# Then, group NEI_Baltimore data set by year and sum Emissions column
NEI_Baltimore_Vehicle <- aggregate(Emissions ~ year, NEI_Baltimore_Vehicle, sum)
#-----------------Working on Los Angeles County, California---------------------
# First, Filter NEI by fips == "06037"
NEI_LA <- NEI[NEI$fips == "06037", ]
# Then, map NEI_LA data set to SCC data set
NEI_LA <- merge(NEI_LA, SCC, by = "SCC", all.x = TRUE)
# Then, filter NEI_LA data set EI.Sector contains vehicles
NEI_LA_Vehicle <- NEI_LA[grep("vehicles", NEI_LA$EI.Sector,
ignore.case = TRUE
), ]
# Then, group NEI_LA data set by year and sum Emissions column
NEI_LA_Vehicle <- aggregate(Emissions ~ year, NEI_LA_Vehicle, sum)
# change the ggplot theme
theme_set(theme_light())
# Plot both NEI_LA_Vehicle and NEI_Baltimore_Vehicle by year in different line colors
g <- ggplot() +
geom_line(data = NEI_LA_Vehicle, aes(x = year, y = Emissions, color = "red")) +
geom_line(data = NEI_Baltimore_Vehicle, aes(
x = year, y = Emissions,
color = "blue"
)) +
labs(
title = "Total PM2.5 Emissions from Motor Vehicle Sources by
Year in Baltimore City and Los Angeles County, California",
x = "Year",
y = "Total PM2.5 Emissions"
) +
scale_color_manual(
name = "City",
values = c("red","blue"),
labels = c("Baltimore City", "Los Angeles County, California")
)
# Last, save the plot to "plot6.png" file in figure folder.
ggsave("./figure/Plot6.png", plot = g, width = 8, height = 5, units = "in")
print("Png File has been created in the figure folder.")
